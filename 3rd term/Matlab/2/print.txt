%Проверяет является ли функция монотонной
function res = IsMonotonic(exp)
    syms d s n x;
    %Находим произодную
    d = diff(exp);
    %Корни производной
    s = solve(d);
    %Проверяем знак
    x = symsum(d, 1, 1);
    %Если нет конрей значит функция монотонная
    res = isempty(s) && (double(x) < 0);
end;

syms n R lim

%Находим радиус сходиомсти
R = limit( ((3 ^ n) * (n + 2)) / ((3 ^ (n - 1)) * (n + 1)), inf);
disp('Radius');
disp(R);

%Проверка левой границы по Лейбницу
if((limit(3 / (n + 1), n, inf) == 0) && IsMonotonic(3 / (n + 1)))
    disp('Include left border');
else
    disp('Exclude left border');
end;

%Проверка правой границы по признаку сравнения
lim = double(limit(n / (n + 1), inf));
if((isinf(lim) == false) && (lim > 0))
    disp('Exclude right border');
else
    disp('Include right border');
end;

=============================================

%Проверяет является ли функция монотонной
function res = IsMonotonic(exp)
    syms d s n x;
    %Находим произодную
    d = diff(exp);
    %Корни производной
    s = solve(d);
    %Проверяем знак
    x = symsum(d, 1, 1);
    %Если нет конрей значит функция монотонная
    res = isempty(s) && (double(x) < 0);
end;

syms n R lim

%Находим радиус сходиомсти
R = limit( 1 / (power(((n + 1) /  n) ^ n, 1 / n)), inf);
disp('Radius');
disp(R);

%Проверка левой границы по Лейбницу
if((limit(n / (n + 1), n, inf) == 0) && IsMonotonic(n / (n + 1)))
    disp('Include left border');
else
    disp('Exclude left border');
end;

%Проверка правой границы по необходимому признаку
lim = double(limit(power(((n + 1) / n), n), inf));
if(lim == 0)
    disp('Include right border');
else
    disp('Exclude right border');
end;

===========================================

%Проверяет является ли функция монотонной
function res = IsMonotonic(exp)
    syms d s n x;
    %Находим произодную
    d = diff(exp);
    %Корни производной
    s = solve(d);
    %Проверяем знак
    x = symsum(d, 1, 1);
    %Если нет конрей значит функция монотонная
    res = isempty(s) && (double(x) < 0);
end;

syms x y lim n l mid
l = abs(x ^ 2 - 5 * x + 6) / 5;
y = solve(l);

%Найдем интервал и отформатируем для вывода
mid = y(2) + (y(1) - y(2)) / 2;
if(double((mid ^ 2 - 5 * mid + 11) / 5) < 1)
    disp(fprintf('Interval (%d;%d)', double(y(2)), double(y(1))));
else
    disp(fprintf('Interval (-inf; %d) U (%d; +inf)', double(y(2)), double(y(1))));
end;

%Проверка левой границы по признаку сравнения
lim = double(limit((1 / (n ^ 2 + 5)) / (1 / n ^ 2), n, inf));
if((isinf(lim) == false) && (lim > 0))
    disp(fprintf('Include point %d', double(y(1))));
end;

%Проверка правой границы по признаку Лейбница
if((limit(1 / (n ^ 2 + 5), n, inf) == 0) && (IsMonotonic(1 / ((n ^ 2) + 5))))
    disp(fprintf('Include point %d', double(y(2))));
end;



=============================================

syms x y lim n l mid
l = 3 ^ (1 / x - 1) - 1;
y = solve(l);

%Найдем интервал и отформатируем для вывода
if(double(1 / (double(y(1)))) < 0)
    disp(fprintf('Interval (%d;+inf)', double(y(1))));
else
    disp(fprintf('Interval (-inf;%d)', double(y(1))));
end;
     
====================================================


function y = Calc(n)
    syms f x;
    %Общий член
    f = ((-1) ^ (n + 1)) / (gamma(n - 2) * (2 * n - 1) * (4 ^ (2 * n - 1))); 
    %Интегрируем функцию с заданным n
    y = int(f, 0.0, double(1 / 4));
end;

syms n eps s;
%Инициализация
n = 1;          %текущий член ряда
eps = 0.001;    %заданная точность
s = 0;          %накапливаемая сумма

while double(abs(Calc(n))) > double(eps)
    s = s + Calc(n);
    n = n + 1;
end;

disp(fprintf('%s %d', 'n = ', n));
disp(fprintf('%s %f', 'Result: ', double(s)));

=======================================================

hold on;
syms eps x k N

eps = 0.3;
N = round((1 + eps) / (2 * eps)) + 1;
x = 0:0.1:1;

%Рисую eps-окрестность
plot(x, Calc(x, 1, inf) + eps, '-.g');
plot(x, Calc(x, 1, inf) - eps, '-.g');
%Рисую исходную сумму
plot(x, Calc(x, 1, inf) , '-');

for i = N : (N + 20)
    plot(x, Calc(x, 1, i), '-r');
end;

hold on;

